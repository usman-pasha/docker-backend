version: '3.1'
services:

#########################################
# node core api
#########################################
  api:
    image: api:v1
    container_name: node_apis
    restart: always
    env_file:
      - .env
    ports:
      - 8080:8080
    depends_on:
      - db   
    healthcheck:
      test: ["CMD", "curl", "-f", "-X", "GET", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3      
    volumes:
      - ./:/usr/src/app      
    networks:
      - app-network      

#########################################
# Database Mongo 
#########################################      
  db:
    image: mongo:6.0.13
    container_name: mongo_instance
    restart: unless-stopped
    env_file:
      - .env  
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: testing        
    ports:
      - 27018:27017
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.auth('root', 'testing'); db.stats()", "--authenticationDatabase", "admin"]
      interval: 10s
      timeout: 5s
      retries: 4          
    networks:
      - app-network    

#########################################
# Front-End
#########################################     
  front-end:
    image: react:v1
    container_name: front-end
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - api   
    networks:
      - app-network        

#########################################
# nginx
#########################################           
  nginx:
    image: nginx:stable-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./images:/usr/src/app/images
    depends_on:
      - api
      - front-end
    networks:
      - app-network

#########################################
# volumes & networks
######################################### 

volumes:
  mongo_data:      

networks:
  app-network:
    driver: bridge  